[{"path":"https://markjrieke.github.io/riekelib/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Mark Rieke Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://markjrieke.github.io/riekelib/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Rieke. Author, maintainer.","code":""},{"path":"https://markjrieke.github.io/riekelib/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rieke M (2024). riekelib: collection personal functions. R package version 0.3.2, https://markjrieke.github.io/riekelib/, https://github.com/markjrieke/riekelib.","code":"@Manual{,   title = {riekelib: A collection of personal functions},   author = {Mark Rieke},   year = {2024},   note = {R package version 0.3.2,     https://markjrieke.github.io/riekelib/},   url = {https://github.com/markjrieke/riekelib}, }"},{"path":"https://markjrieke.github.io/riekelib/index.html","id":"riekelib-","dir":"","previous_headings":"","what":"A collection of personal functions","title":"A collection of personal functions","text":"Author: Mark Rieke License: MIT collection functions use regularly professional & personal projects. Formalizing development package helps speed workflows without re-define functions project. makes sense, may coalesce common functions dedicated package, can considered ever--progress testing ground. Others note intended primarily use , may well-documented error-resilient.","code":""},{"path":"https://markjrieke.github.io/riekelib/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A collection of personal functions","text":"’d like use, package can installed devtools package:","code":"install.packages(\"devtools\") devtools::install_github(\"https://github.com/markjrieke/riekelib\")"},{"path":"https://markjrieke.github.io/riekelib/reference/arrange_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort a vector by alphabetic or numeric order — arrange_vector","title":"Sort a vector by alphabetic or numeric order — arrange_vector","text":"Sort vector alphabetic numeric order","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/arrange_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort a vector by alphabetic or numeric order — arrange_vector","text":"","code":"arrange_vector(x, desc = FALSE)"},{"path":"https://markjrieke.github.io/riekelib/reference/arrange_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort a vector by alphabetic or numeric order — arrange_vector","text":"x vector sorted desc logical; set true, return vector sorted descending order","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/arrange_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort a vector by alphabetic or numeric order — arrange_vector","text":"","code":"# create a character vector myvec <- c(\"dog\", \"cat\", \"bird\")  # arrange vector by character arrange_vector(myvec) #> [1] \"bird\" \"cat\"  \"dog\"   # can also arrange in reverse order arrange_vector(myvec, desc = TRUE) #> [1] \"dog\"  \"cat\"  \"bird\""},{"path":"https://markjrieke.github.io/riekelib/reference/beta_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a confidence interval to values in a dataframe based on the beta distribution. — beta_interval","title":"Apply a confidence interval to values in a dataframe based on the beta distribution. — beta_interval","text":"Apply confidence interval values dataframe based beta distribution.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/beta_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a confidence interval to values in a dataframe based on the beta distribution. — beta_interval","text":"","code":"beta_interval(.data, alpha, beta, conf = 0.95)"},{"path":"https://markjrieke.github.io/riekelib/reference/beta_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a confidence interval to values in a dataframe based on the beta distribution. — beta_interval","text":".data Data frame; confidence interval applied row data frame. alpha First shape parameter beta distribution, must greater 0 beta Second shape parameter beta distribution, must greater 0 conf Confidence interval, must [0, 1]. Defaults 0.95.","code":""},{"path":[]},{"path":"https://markjrieke.github.io/riekelib/reference/beta_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a confidence interval to values in a dataframe based on the beta distribution. — beta_interval","text":"","code":"# create example df alpha <- rnorm(10, 100, 20) beta <- rnorm(10, 80, 10) example <- dplyr::bind_cols(alpha, beta) #> New names: #> • `` -> `...1` #> • `` -> `...2` colnames(example) <- c(\"alpha\", \"beta\")  # apply the default confidence interval of 0.95 beta_interval(example, alpha, beta) #> # A tibble: 10 × 4 #>    alpha  beta ci_lower ci_upper #>    <dbl> <dbl>    <dbl>    <dbl> #>  1  72.0  74.5    0.411    0.572 #>  2 105.   86.3    0.478    0.619 #>  3  51.3 101.     0.265    0.414 #>  4  99.9  63.7    0.535    0.684 #>  5 112.   85.1    0.500    0.637 #>  6 123.   61.4    0.598    0.733 #>  7  63.6  74.8    0.377    0.543 #>  8  95.1  79.5    0.471    0.618 #>  9  95.1  85.4    0.454    0.599 #> 10  94.3  70.9    0.495    0.645  # apply a custom confidence interval beta_interval(example, alpha, beta, conf = 0.99) #> # A tibble: 10 × 4 #>    alpha  beta ci_lower ci_upper #>    <dbl> <dbl>    <dbl>    <dbl> #>  1  72.0  74.5    0.386    0.597 #>  2 105.   86.3    0.456    0.640 #>  3  51.3 101.     0.244    0.439 #>  4  99.9  63.7    0.511    0.705 #>  5 112.   85.1    0.478    0.658 #>  6 123.   61.4    0.575    0.752 #>  7  63.6  74.8    0.353    0.569 #>  8  95.1  79.5    0.447    0.640 #>  9  95.1  85.4    0.431    0.621 #> 10  94.3  70.9    0.471    0.668"},{"path":"https://markjrieke.github.io/riekelib/reference/cholesky_decompose.html","id":null,"dir":"Reference","previous_headings":"","what":"The Cholesky Decomposition — cholesky_decompose","title":"The Cholesky Decomposition — cholesky_decompose","text":"Compute Cholesky factorization real, symmetric, positive-definite square matrix. Returns lower-left triangular matrix match Stan's version. function simply opinionated wrapper base R function, chol().","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/cholesky_decompose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Cholesky Decomposition — cholesky_decompose","text":"","code":"cholesky_decompose(x, ...)"},{"path":"https://markjrieke.github.io/riekelib/reference/cholesky_decompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Cholesky Decomposition — cholesky_decompose","text":"x symmetric, positive-definite square matrix. ... Additional parameters pass chol().","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/cholesky_decompose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Cholesky Decomposition — cholesky_decompose","text":"lower-triangular square matrix size x.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/cholesky_decompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Cholesky Decomposition — cholesky_decompose","text":"","code":"x <- matrix(c(2, 1, 1, 2), nrow = 2) cholesky_decompose(x) #>           [,1]     [,2] #> [1,] 1.4142136 0.000000 #> [2,] 0.7071068 1.224745"},{"path":"https://markjrieke.github.io/riekelib/reference/color_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Color text using HTML color styling — color_text","title":"Color text using HTML color styling — color_text","text":"Useful conjuction ggtext glue","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/color_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color text using HTML color styling — color_text","text":"","code":"color_text(text, hex_color_code)"},{"path":"https://markjrieke.github.io/riekelib/reference/color_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color text using HTML color styling — color_text","text":"text text colored hex_color_code color applied text","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/color_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color text using HTML color styling — color_text","text":"","code":"color_text(\"Hello there!\", \"#BD43BF\") #> [1] \"<span style='color:#BD43BF'>Hello there!<\/span>\""},{"path":"https://markjrieke.github.io/riekelib/reference/condition_gaussian_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Condition a Gaussian Process — condition_gaussian_process","title":"Condition a Gaussian Process — condition_gaussian_process","text":"Condition Multivariate Normal distribution based Gaussian Process using exponentiated quadratic covariance matrix.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/condition_gaussian_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Condition a Gaussian Process — condition_gaussian_process","text":"","code":"condition_gaussian_process(   n,   x,   y,   x_new,   amplitude = 1,   length_scale = 1,   delta = 1e-09 )"},{"path":"https://markjrieke.github.io/riekelib/reference/condition_gaussian_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Condition a Gaussian Process — condition_gaussian_process","text":"n number random draws. x position values condition . y values condition (positions x). x_new new positions estimate values . amplitude Vertical scale covariance function length_scale Horizontal scale covariance function delta small offset along diagonal resulting covariance matrix ensure function returns positive-semidefinite matrix. Can also used white noise kernel allow increased variation individual positions along vector x.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/condition_gaussian_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Condition a Gaussian Process — condition_gaussian_process","text":"matrix size \\(M \\times N\\), \\(M\\) length(x_new), \\(N\\) n. column random draw conditioned multivariate normal row corresponds draw position x_new.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/condition_gaussian_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Condition a Gaussian Process — condition_gaussian_process","text":"","code":"x <- 1:10 y <- rep(0, 10) x_new <- 11:15  condition_gaussian_process(3, x, y, x_new) #>            [,1]       [,2]       [,3] #> [1,] -0.4754557 -0.3225914 -0.5251827 #> [2,] -0.5454911 -0.4607772 -0.2237687 #> [3,]  0.5972781 -0.4503121 -0.6325060 #> [4,] -0.7199454  0.9117895 -1.3527040 #> [5,] -0.8630023  0.4385241 -0.1779215"},{"path":"https://markjrieke.github.io/riekelib/reference/cov_exp_quad.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Functions — cov_exp_quad","title":"Covariance Functions — cov_exp_quad","text":"Generate \\(N \\times N\\) covariance matrix, \\(\\Sigma\\), passing distance vector length \\(N\\), x, one following covariance functions: Exponentiated Quadtratic $$\\Sigma_{ij} = \\sigma^2 \\exp \\left( \\frac{|x_i - x_j|^2}{-2 \\ \\rho^2} \\right)$$ Rational Quadratic $$\\Sigma_{ij} = \\sigma^2 \\left(1 + \\frac{|x_i - x_j|^2}{2 \\alpha \\rho^2} \\right)^{-\\alpha}$$ Periodic $$\\Sigma_{ij} = \\sigma^2 \\exp \\left(\\frac{-2 \\sin^2(\\pi |x_i - x_j|/p)}{\\rho^2} \\right)$$ Linear $$\\Sigma_{ij} = \\beta_0 + \\beta (x_i - c)(x_j - c)$$ White Noise $$\\Sigma_{ij} = \\sigma^2 $$ \\(\\sigma^2\\) amplitude \\(\\rho\\) length_scale covariance function can operate. rational quadratic kernel, \\(\\alpha\\) scale-mixture \\(\\alpha \\rightarrow \\infty\\) rational quadratic converges exponentiated quadratic. periodic kernel, \\(p\\) period function repeats. linear kernel, \\(\\beta_0\\) \\(\\beta\\) intercept slope parameters, respectively. \\(c\\) constant offsets linear covariance origin. Finally, white noise kernel, \\(\\) identity matrix.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/cov_exp_quad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Functions — cov_exp_quad","text":"","code":"cov_exp_quad(x, amplitude = 1, length_scale = 1, delta = 1e-09)  cov_rational(x, amplitude = 1, length_scale = 1, mixture = 1, delta = 1e-09)  cov_periodic(x, amplitude = 1, length_scale = 1, period = 1, delta = 1e-09)  cov_linear(x, slope = 0, intercept = 0, constant = 0, delta = 1e-09)  cov_noise(x, amplitude = 1)"},{"path":"https://markjrieke.github.io/riekelib/reference/cov_exp_quad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Functions — cov_exp_quad","text":"x vector containing positions. amplitude Vertical scale covariance function length_scale Horizontal scale covariance function delta small offset along diagonal resulting covariance matrix ensure function returns positive-semidefinite matrix. Can also used white noise kernel allow increased variation individual positions along vector x. mixture Scale-mixture rational quadratic covariance function period Period repetition periodic covariance function slope Slope linear covariance function intercept Intercept linear covariance function constant constant offsets linear covariance function along x-axis origin.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/cov_exp_quad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Functions — cov_exp_quad","text":"\\(N \\times N\\) symmetric, positive-semidefinite covariance matrix","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/cov_exp_quad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance Functions — cov_exp_quad","text":"","code":"x <- seq(from = -2, to = 2, length.out = 50)  # heatmap of covariance - higher values = greater covariance cov_exp_quad(x) |> heatmap(Rowv = NA, Colv = NA)   # decreasing the length scale decreases the range over which values covary cov_exp_quad(x, length_scale = 0.5) |> heatmap(Rowv = NA, Colv = NA)   # rational quadratic includes a mixture parameter cov_rational(x, mixture = 0.1) |> heatmap(Rowv = NA, Colv = NA)   # periodic repeats over a distance cov_periodic(x, period = 1, length_scale = 2) |> heatmap(Rowv = NA, Colv = NA)   # linear covariance increases/decreases linearly cov_linear(x, slope = 1) |> heatmap(Rowv = NA, Colv = NA)   # white noise is applied only along the diagonal cov_noise(x) |> heatmap(Rowv = NA, Colv = NA)"},{"path":"https://markjrieke.github.io/riekelib/reference/ggquicksave.html","id":null,"dir":"Reference","previous_headings":"","what":"Call ggsave with default parameters — ggquicksave","title":"Call ggsave with default parameters — ggquicksave","text":"Calls ggsave defaults happen like. ggplot2 3.3.4, ggplot2::ggsave() uses ragg backend device saving.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/ggquicksave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call ggsave with default parameters — ggquicksave","text":"","code":"ggquicksave(   filename,   plot = ggplot2::last_plot(),   width = 9,   height = 6,   units = \"in\",   dpi = 500,   ... )"},{"path":"https://markjrieke.github.io/riekelib/reference/ggquicksave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call ggsave with default parameters — ggquicksave","text":"filename File name create disk. plot Plot save, defaults last plot displayed. width, height, units Plot size units (\"\", \"cm\", \"mm\", \"px\"). dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). ... arguments passed ggplot2::ggsave().","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/ggquicksave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call ggsave with default parameters — ggquicksave","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) ggplot(mtcars, aes(mpg, wt)) +   geom_point()  ggquicksave(\"mtcars.png\") } # }"},{"path":"https://markjrieke.github.io/riekelib/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a between bound and unbounded scales. — logit","title":"Transform a between bound and unbounded scales. — logit","text":"Transform bound unbounded scales.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a between bound and unbounded scales. — logit","text":"","code":"logit(x, lower_bound = 0, upper_bound = 1, base = exp(1))  expit(x, lower_bound = 0, upper_bound = 1, base = exp(1))"},{"path":"https://markjrieke.github.io/riekelib/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a between bound and unbounded scales. — logit","text":"x Value rescaled. lower_bound Lower bound x; defaults 0. upper_bound Upper bound x; defaults 1. base Base used log-transform, defaults exp(1) = e","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/logit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform a between bound and unbounded scales. — logit","text":"logit() transform value bound scale unbound scale, expit() performs reverse transformation. Values lower/upper bounds correspond -Inf/Inf unbounded scale. Uses natural base, e, default, bases can passed parameter base.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a between bound and unbounded scales. — logit","text":"","code":"# unbound vector of values bound between [0, 1] myvec <- seq(0, 10, 1)/10 logit(myvec) #>  [1]       -Inf -2.1972246 -1.3862944 -0.8472979 -0.4054651  0.0000000 #>  [7]  0.4054651  0.8472979  1.3862944  2.1972246        Inf  # unbound vector of values between [100, 200] myvec <- seq(100, 200, 10) logit(myvec, lower_bound = 100, upper_bound = 200) #>  [1]       -Inf -2.1972246 -1.3862944 -0.8472979 -0.4054651  0.0000000 #>  [7]  0.4054651  0.8472979  1.3862944  2.1972246        Inf  # bound vector of unbounded values to [0, 1] myvec <- rnorm(10) expit(myvec) #>  [1] 0.4665508 0.1289710 0.4306408 0.4222738 0.7440846 0.5175016 0.3454447 #>  [8] 0.4875114 0.4374584 0.6094015  # bound vector of unbounded values to [100, 200] expit(myvec, lower_bound = 100, upper_bound = 200) #>  [1] 146.6551 112.8971 143.0641 142.2274 174.4085 151.7502 134.5445 148.7511 #>  [9] 143.7458 160.9401"},{"path":"https://markjrieke.github.io/riekelib/reference/normal_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a confidence interval to values in a dataframe based on the normal distribution. — normal_interval","title":"Apply a confidence interval to values in a dataframe based on the normal distribution. — normal_interval","text":"Apply confidence interval values dataframe based normal distribution.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/normal_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a confidence interval to values in a dataframe based on the normal distribution. — normal_interval","text":"","code":"normal_interval(.data, mean, std_dev, conf = 0.95)"},{"path":"https://markjrieke.github.io/riekelib/reference/normal_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a confidence interval to values in a dataframe based on the normal distribution. — normal_interval","text":".data Data frame; confidence interval applied row data frame. mean Mean distribution std_dev Standard deviation distribution conf Confidence interval, must [0, 1]. Defaults 0.95.","code":""},{"path":[]},{"path":"https://markjrieke.github.io/riekelib/reference/normal_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a confidence interval to values in a dataframe based on the normal distribution. — normal_interval","text":"","code":"# create example df mean <- rnorm(10, 100, 20) std_dev <- rnorm(10, 80, 10) example <- dplyr::bind_cols(mean, std_dev) #> New names: #> • `` -> `...1` #> • `` -> `...2` colnames(example) <- c(\"mean\", \"std_dev\")  # apply the default confidence interval of 0.95 normal_interval(example, mean, std_dev) #> # A tibble: 10 × 4 #>     mean std_dev ci_lower ci_upper #>    <dbl>   <dbl>    <dbl>    <dbl> #>  1 155.     85.5    -12.5     323. #>  2 101.     57.3    -11.3     213. #>  3 112.    107.     -97.8     321. #>  4 102.     76.4    -47.4     252. #>  5  61.8    82.1    -99.2     223. #>  6 117.     90.7    -60.6     295. #>  7  95.1    73.3    -48.6     239. #>  8  95.9    91.1    -82.8     275. #>  9 100.     77.5    -51.6     252. #> 10 101.     68.2    -33.1     234.  # apply a custom confidence interval normal_interval(example, mean, std_dev, conf = 0.99) #> # A tibble: 10 × 4 #>     mean std_dev ci_lower ci_upper #>    <dbl>   <dbl>    <dbl>    <dbl> #>  1 155.     85.5    -65.1     375. #>  2 101.     57.3    -46.6     248. #>  3 112.    107.    -164.      387. #>  4 102.     76.4    -94.4     299. #>  5  61.8    82.1   -150.      273. #>  6 117.     90.7   -116.      351. #>  7  95.1    73.3    -93.8     284. #>  8  95.9    91.1   -139.      331. #>  9 100.     77.5    -99.3     300. #> 10 101.     68.2    -75.1     276."},{"path":"https://markjrieke.github.io/riekelib/reference/percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the percentage each value or combination of values appear in a tibble or dataframe — percent","title":"Return the percentage each value or combination of values appear in a tibble or dataframe — percent","text":"Return percentage value combination values appear tibble dataframe","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the percentage each value or combination of values appear in a tibble or dataframe — percent","text":"","code":"percent(data, ..., .keep_n = FALSE)"},{"path":"https://markjrieke.github.io/riekelib/reference/percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the percentage each value or combination of values appear in a tibble or dataframe — percent","text":"data tibble dataframe ... parameters pass dplyr::count() .keep_n logical; keep remove n col created dplyr::count(). Defaults FALSE.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the percentage each value or combination of values appear in a tibble or dataframe — percent","text":"","code":"# return a tibble of the percentage of gear type in the `mtcars` dataset percent(mtcars, gear) #>   gear     pct #> 1    3 0.46875 #> 2    4 0.37500 #> 3    5 0.15625"},{"path":"https://markjrieke.github.io/riekelib/reference/riekelib-package.html","id":null,"dir":"Reference","previous_headings":"","what":"riekelib: A collection of personal functions — riekelib-package","title":"riekelib: A collection of personal functions — riekelib-package","text":"collection functions personal/professional use, super well documented tested. Depending package grows, functions (groups functions) may formalized succinct packages.","code":""},{"path":[]},{"path":"https://markjrieke.github.io/riekelib/reference/riekelib-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"riekelib: A collection of personal functions — riekelib-package","text":"Maintainer: Mark Rieke markjrieke@gmail.com","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/scale_xy_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale shortcuts — scale_xy_percent","title":"Scale shortcuts — scale_xy_percent","text":"Format labels x-axis, y-axis, ","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/scale_xy_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale shortcuts — scale_xy_percent","text":"","code":"scale_xy_percent(..., accuracy = 1)  scale_x_percent(..., accuracy = 1)  scale_y_percent(..., accuracy = 1)  scale_xy_comma(..., log10 = FALSE)  scale_x_comma(..., log10 = FALSE, accuracy = NULL)  scale_y_comma(..., log10 = FALSE, accuracy = NULL)"},{"path":"https://markjrieke.github.io/riekelib/reference/scale_xy_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale shortcuts — scale_xy_percent","text":"... parameters passed underlying ggplot2 scale functions. accuracy passed underlying scales label functions. log10 axes log10 scale? Defaults FALSE","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/scale_xy_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale shortcuts — scale_xy_percent","text":"","code":"library(ggplot2)  # quickly add comma format to x/y scales tibble::tibble(x = rlnorm(1e3, 10),                y = rlnorm(1e3, 10)) |>   ggplot(aes(x, y)) +   geom_point() +   scale_xy_comma(log10 = TRUE)   # quickly add percent format to x/y scales tibble::tibble(x = rbeta(1e3, 2, 2),                y = rbeta(1e3, 2, 2)) |>   ggplot(aes(x, y)) +   geom_point() +   scale_xy_percent()"},{"path":"https://markjrieke.github.io/riekelib/reference/softmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the softmax function to a vector of values. — softmax","title":"Apply the softmax function to a vector of values. — softmax","text":"Apply softmax function vector values.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/softmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the softmax function to a vector of values. — softmax","text":"","code":"softmax(x)"},{"path":"https://markjrieke.github.io/riekelib/reference/softmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the softmax function to a vector of values. — softmax","text":"x Vector values.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/softmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply the softmax function to a vector of values. — softmax","text":"Apply softmax function vector values, e.g.: $$\\text{softmax}(z_i) = \\frac{e^{z_i}}{\\sum_{j = 1}^K \\ e^{z_j}}$$","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/softmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the softmax function to a vector of values. — softmax","text":"","code":"softmax(seq(from = 0, to = 1, by = 0.25)) #> [1] 0.1140507 0.1464440 0.1880379 0.2414454 0.3100220"},{"path":"https://markjrieke.github.io/riekelib/reference/standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Center and scale a set of values. — standardize","title":"Center and scale a set of values. — standardize","text":"Transform values x mean approximately 0 standard deviation approximately 1. Note whole-cloth reimplemntation function name rethinking package Dr. Richard McElreath.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center and scale a set of values. — standardize","text":"","code":"standardize(x)"},{"path":"https://markjrieke.github.io/riekelib/reference/standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center and scale a set of values. — standardize","text":"x vector values scaled.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/standardize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center and scale a set of values. — standardize","text":"","code":"x <- rnorm(1000, mean = 3, sd = 4) z <- standardize(x)  mean(z) #> [1] -5.747605e-17 sd(z) #> [1] 1"},{"path":"https://markjrieke.github.io/riekelib/reference/sys_sleep.html","id":null,"dir":"Reference","previous_headings":"","what":"Sleep with a progress bar — sys_sleep","title":"Sleep with a progress bar — sys_sleep","text":"small wrapper around Sys.sleep() adds progress bar.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/sys_sleep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sleep with a progress bar — sys_sleep","text":"","code":"sys_sleep(time, ..., message = \"Sleeping...\", .progress = TRUE)"},{"path":"https://markjrieke.github.io/riekelib/reference/sys_sleep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sleep with a progress bar — sys_sleep","text":"time amount time (seconds) sleep ... additional parameters passed cli::cli_progress_bar() message message display alongside progress bar .progress whether sleep progress bar. Defaults TRUE.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/sys_sleep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sleep with a progress bar — sys_sleep","text":"","code":"# sleep with a progress bar sys_sleep(3) #> Sleeping... ■■■■■■■■■■■                       33% | ETA:  2s #> Sleeping... ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s"},{"path":"https://markjrieke.github.io/riekelib/reference/theme_rieke.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom ggplot2 theme — theme_rieke","title":"Custom ggplot2 theme — theme_rieke","text":"custom ggplot2 theme based personal preferences. assumes user () required custom fonts already installed.","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/theme_rieke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom ggplot2 theme — theme_rieke","text":"","code":"theme_rieke(   base_size = 14,   title_ratio = 24/14,   title_family = \"Playfair Display\",   base_family = \"IBM Plex Sans\",   base_color = \"#363a3c\" )"},{"path":"https://markjrieke.github.io/riekelib/reference/theme_rieke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom ggplot2 theme — theme_rieke","text":"base_size base font size, given pts title_ratio ratio title font size base_size title_family font family plot title base_family font family text plot except title base_color color text plot","code":""},{"path":"https://markjrieke.github.io/riekelib/reference/theme_rieke.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom ggplot2 theme — theme_rieke","text":"","code":"library(ggplot2)  # plotting with NULL families --- must install default fonts locally # plotting with `title_ratio = 1` since not using the default of Playfair Display ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   theme_rieke(title_family = NULL,               base_family = NULL,               title_ratio = 1) +   labs(title = \"The title is left-aligned and allows for **bold characters**\",        subtitle = \"You can also use any markdown formatting, including *italics*\",        caption = \"Note the use of break<br>for line breaks\")"},{"path":[]},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"new-features-0-3-2","dir":"Changelog","previous_headings":"","what":"New features","title":"riekelib 0.3.2","text":"sys_sleep() function added wrapper around Sys.sleep() sleeping progress bar.","code":""},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"minor-bug-fixes-and-improvements-0-3-2","dir":"Changelog","previous_headings":"","what":"Minor bug fixes and improvements","title":"riekelib 0.3.2","text":"scale_*_comma() functions now include parameter accuracy. theme_rieke() now uses lighter/less intrusive grid. condition_gaussian_process() longer throws error supplied single values x y.","code":""},{"path":[]},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"riekelib 0.3.1","text":"standardize() function added centering scaling values.","code":""},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"minor-bug-fixes-and-improvements-0-3-1","dir":"Changelog","previous_headings":"","what":"Minor bug fixes and improvements","title":"riekelib 0.3.1","text":"theme_rieke() now correctly applies markdown formatting axis text. theme_rieke() now defaults Playfair Display title family. Package startup messages longer display non-interactive settings.","code":""},{"path":[]},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"riekelib 0.3.0","text":"cov_rational() cov_periodic() cov_linear() cov_noise()","code":""},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"conscious-decoupling-0-3-0","dir":"Changelog","previous_headings":"","what":"Conscious decoupling","title":"riekelib 0.3.0","text":"Per #22, ’m moving functions specific manipulating Qualtrics survey data Memorial Hermann package, {heRmann}. following functions riekelib 0.2.0 moved: fetch_surveys() deduplicate_ip() fix_survey_names() rnps() qnps() following functions available riekelib 0.2.0.9000 8/22/23, removed 8/23/23. set_recode_path() read_recodes() fix_campus_names()","code":""},{"path":[]},{"path":[]},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"gaussian-process-functions-0-2-0","dir":"Changelog","previous_headings":"New features","what":"Gaussian process functions","title":"riekelib 0.2.0","text":"cholesky_decompose(): generate lower triangular Cholesky decomposition matrix (consistent Stan’s implementation). cov_exp_quad(): generate covariance matrix using exponentiated quadratic kernel. condition_gaussian_process(): generate new draws multivariate normal distribution conditioning Gaussian Process.","code":""},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"ggplot2-functions-0-2-0","dir":"Changelog","previous_headings":"New features","what":"ggplot2 functions","title":"riekelib 0.2.0","text":"scale_xy_percent(), scale_x_percent(), scale_y_percent() provide shortcuts formatting axis labels scales::label_percent(). scale_xy_comma(), scale_x_comma(), scale_y_comma() provide shortcuts formatting axis labels scales::label_comma().","code":""},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"minor-bug-fixes-and-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor bug fixes and improvements","title":"riekelib 0.2.0","text":"ggquicksave() now uses ragg default. theme_rieke() now uses fonts Tiempos Text IBM Plex Sans title text, respectively, default. applicable, functions now use .data pronoun rlang. removes need globals.R.","code":""},{"path":"https://markjrieke.github.io/riekelib/news/index.html","id":"riekelib-010","dir":"Changelog","previous_headings":"","what":"riekelib 0.1.0","title":"riekelib 0.1.0","text":"collection functions use regularly: logit(), expit() softmax() beta_interval(), normal_interval() arrange_vector() percent() theme_rieke() ggquicksave() color_text() fetch_surveys() fix_survey_names() deduplicate_ip() rnps(), qnps()","code":""}]
